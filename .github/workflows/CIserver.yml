# This is a basic workflow to help you get started with Actions

name: CI-Server

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main, develop, 'feature/**' ]
    paths:
      - '.github/workflows/CIserver.yml'
      - 'src/**'
      - 'Covid19Radar.Functions.sln'
      - 'Covid19Radar.Functions.runsettings'
      - 'Nuget.config'
  pull_request:
    branches: [ main, develop, 'feature/**' ]
    paths:
      - '.github/workflows/CIserver.yml'
      - 'src/**'
      - 'Covid19Radar.Functions.sln'
      - 'Covid19Radar.Functions.runsettings'
      - 'Nuget.config'
jobs:
  build:
    name: build
    runs-on: windows-latest
    strategy:
      matrix:
        Configuration: [Debug, Release]
    steps:
    - name: Set up JDK 11
      if: ${{ matrix.Configuration == 'Release' }}
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Package Add coverlet.msbuild
      run: dotnet add ${{ github.workspace }}/src/Covid19Radar.Api.Tests/Covid19Radar.Api.Tests.csproj package coverlet.msbuild
    - name: Cache SonarCloud packages
      if: ${{ matrix.Configuration == 'Release' }}
      uses: actions/cache@v1
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache SonarCloud scanner
      if: ${{ matrix.Configuration == 'Release' }}
      id: cache-sonar-scanner
      uses: actions/cache@v1
      with:
        path: .\.sonar\scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner
    - name: Install SonarCloud scanner
      if: ${{ steps.cache-sonar-scanner.outputs.cache-hit != 'true' && matrix.Configuration == 'Release' }}
      shell: powershell
      run: |
        New-Item -Path .\.sonar\scanner -ItemType Directory
        dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
    - name: Begin SonarScanner
      if: ${{ matrix.Configuration == 'Release' }}
      run: ./.sonar/scanner/dotnet-sonarscanner begin /k:"cocoa-mhlw_cocoa" /o:"cocoa-mhlw" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1
    - name: msbuild
      run: msbuild ${{ github.workspace }}/Covid19Radar.Functions.sln /restore /t:Build /p:RestoreConfigFile=${{ github.workspace }}/Nuget.config /p:Configuration=${{ matrix.Configuration }}
    - name: Execute Unit Tests
      run: dotnet test ${{ github.workspace }}/Covid19Radar.Functions.sln /p:CollectCoverage=true /p:CoverletOutputFormat=opencover --no-build --logger trx --settings ${{ github.workspace }}/Covid19Radar.Functions.runsettings --configuration ${{ matrix.Configuration }} --collect:"XPlat Code Coverage"    
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: true
    - name: End SonarScanner
      if: ${{ matrix.Configuration == 'Release' }}
      run: ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
